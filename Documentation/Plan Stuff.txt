INPUT inpVal
IF inpVal is integer between 0-255
  (for binary)
  n = 7 (maybe use inpVal.Length?)
  ARRAY 0, 0, 0, 0, 0, 0, 0, 0
  FOR n >=0
    IF inpVal >= 2^n
      ARRAY[current position] = 1 (replace the value in the array with a '1'. move along the array each loop)
      n - 1
  
  (for hexadecimal)
  ARRAY 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F (hexadecimal values)
  ARRAY[inpVal / 16] + ARRAY[inpVal % 16] (divide and mod the int to get the 2 hex values)
  
  IF inpVal is a binary value
    (for decimal)
    FOR inpVal Length
      reverse inpVal (so index value is suitable when doing powers)
      IF inpVal[position in string] = 1
        Total + 2^string position (if the current value in the string is a '1', do 2 to the power of the index value and add to the total)
        
    (for hexadecimal)
    use the same method from before, using the int 'Total' from the bin to decimal
